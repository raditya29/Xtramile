@model Xtramile.Calendar.Web.Models.DateRangeViewModel

@{
    ViewData["Title"] = "Date Range Calculator";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <h4>please use this page to calculate business days between two date.</h4>

    <br />
    <div class="row">
        <div class="col-md-4">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="FromDate" class="control-label"></label>
                <input asp-for="FromDate" class="form-control" />
                <span asp-validation-for="FromDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ToDate" class="control-label"></label>
                <input asp-for="ToDate" class="form-control" />
                <span asp-validation-for="ToDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="button" value="Calculate" class="btn btn-primary" />
            </div>
        </div>
    </div>
    <br />
    <div class="row">
        <p id="result-message" class="invisible"></p>
    </div>
</div>

<script>
    const fromDateInputElement = document.getElementById('FromDate');
    const toDateInputElement = document.getElementById('ToDate');
    const calculateButton = document.querySelector('.btn, .btn-primary');
    const messageParagraphElement = document.getElementById('result-message');

    fromDateInputElement.addEventListener('input', hideMessageParagraphElement);
    toDateInputElement.addEventListener('input', hideMessageParagraphElement);

    calculateButton.addEventListener('click', function () {
        const fromDate = new Date(fromDateInputElement.value);
        const toDate = new Date(toDateInputElement.value);

        $.ajax({
            url: "/api/DateRange/",
            type: "POST",
            data: JSON.stringify({ "fromDate": fromDate.toISOString(), "toDate": toDate.toISOString() }),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                showMessageParagraphElement(response);
            },
            failure: function (response) {
                console.log(response);
            },
            error: function (response) {
                alert(response.responseText);
            }
        });
    });

    function hideMessageParagraphElement() {
        messageParagraphElement.classList.add('invisible');
    }

    function showMessageParagraphElement(message) {
        messageParagraphElement.classList.remove('invisible');

        const businessDaysLiteral = `business days count: ${message.businessDays}. `;
        const publicHolidaysLiteral = (message.publicHolidays?.length > 0) ? `public holidays in between: ${message.publicHolidays}` : '';
        messageParagraphElement.textContent = `${businessDaysLiteral} ${publicHolidaysLiteral}`;
    }
</script>
